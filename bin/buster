#!/bin/bash
set -eu

buster_calculateHash() {
  echo "$(md5sum $1 | cut -d " " -f 1)"
}

BUSTER_PATH="$(realpath $(dirname $(realpath "${BASH_SOURCE[0]}"))/..)"
BUSTER_DIST=${BUSTER_PATH}/dist
BUSTER_RT=${BUSTER_PATH}/rt
BUSTER_SRC=${BUSTER_PATH}/src
BUSTER_TMP=${BUSTER_PATH}/tmp
BUSTER_PLATFORM="$(echo "$(uname -s)-$(uname -m)" | tr '[:upper:]' '[:lower:]' | sed 's/x86_64/x64/')"
BUSTER_VERSION="$(cat ${BUSTER_PATH}/package.json | grep "version" | cut -d ":" -f 2 | tr -d '", ')"
BUSTER_NODE_VERSION=v22.12.0
BUSTER_NODE_IDENTIFIER="node-${BUSTER_NODE_VERSION}-${BUSTER_PLATFORM}"
BUSTER_NODE_PATH="${BUSTER_RT}/${BUSTER_NODE_IDENTIFIER}"
BUSTER_NODE_EXE="${BUSTER_NODE_PATH}/bin/node --enable-source-maps"
BUSTER_NODE_MODULES_IDENTIFIER=$(buster_calculateHash "${BUSTER_PATH}/package.json")
BUSTER_NODE_MODULES_PATH="${BUSTER_PATH}/node_modules"
BUSTER_OXLINT_EXE="${BUSTER_NODE_MODULES_PATH}/@oxlint/$(echo "${BUSTER_PLATFORM}" | sed 's/linux-x64/linux-x64-gnu/')/oxlint"
BUSTER_COMMAND=${1:-}
BUSTER_IS_RELEASE=${BUSTER_IS_RELEASE:-0}

if [ ! -d "${BUSTER_SRC}" ]; then
  BUSTER_IS_RELEASE=1
fi

PATH="${BUSTER_NODE_PATH}/bin:${PATH}"

# Ensure plat and remove tmp if it exists
mkdir -p ${BUSTER_RT}
if [ -d "${BUSTER_TMP}" ]; then
  rm -rf ${BUSTER_TMP}
fi

buster_ensureNode() {
  if [ ! -d "${BUSTER_NODE_PATH}" ]; then
    mkdir -p ${BUSTER_TMP}
    pushd ${BUSTER_TMP} > /dev/null
    BUSTER_NODE_DOWNLOAD_URL=https://nodejs.org/dist/${BUSTER_NODE_VERSION}/${BUSTER_NODE_IDENTIFIER}.tar.gz
    if ! wget -q ${BUSTER_NODE_DOWNLOAD_URL}; then
      echo "Failed to download ${BUSTER_NODE_DOWNLOAD_URL}"
      exit
    fi
    tar xzf ${BUSTER_NODE_IDENTIFIER}.tar.gz
    rm ${BUSTER_NODE_IDENTIFIER}.tar.gz
    mv ${BUSTER_NODE_IDENTIFIER} node
    mv node ${BUSTER_NODE_PATH}
    popd > /dev/null
    rm -rf ${BUSTER_TMP}
  fi
}

buster_ensureNodeModules() {
  if [ ! -d "${BUSTER_NODE_MODULES_PATH}" ] || [ ! "$(cat ${BUSTER_PATH}/node_modules.version)" == "${BUSTER_NODE_MODULES_IDENTIFIER}" ]; then
    # TODO: Would be nice if it would only output on error situations
    ${BUSTER_NODE_PATH}/bin/npm i --prefix ${BUSTER_PATH} > /dev/null
    echo "${BUSTER_NODE_MODULES_IDENTIFIER}" > ${BUSTER_PATH}/node_modules.version
  fi
}

# Compiles ts files from the src folder
buster_compileSelf() {
  local fileNameWihtoutExtension="$(basename -s .ts $1)"
  local distFilePath="${BUSTER_DIST}/${fileNameWihtoutExtension}.js"
  
  if [ ! "${BUSTER_IS_RELEASE}" = "1" ]; then
    mkdir -p ${BUSTER_DIST}
    ${BUSTER_NODE_MODULES_PATH}/.bin/esbuild ${BUSTER_SRC}/$1 --log-level=error --format=esm --platform=node --bundle --sourcemap=external --outfile=${distFilePath}
  fi
  
  echo "$distFilePath"
}

buster_invoke() {  
  local distFilePath="$(buster_compileSelf $1)"

  BUSTER_NODE_MODULES_PATH=${BUSTER_NODE_MODULES_PATH} \
    ${BUSTER_NODE_EXE} ${distFilePath} ${@:2}
}

buster_symlinkModules() {
  buster_invoke "symlinkModules.ts" "$@"
}

buster_bundle() {
  buster_invoke "bundle.ts" "$@" 
}

buster_check() {
  buster_symlinkModules "$@"
  
  ${BUSTER_NODE_MODULES_PATH}/.bin/tsc --noEmit $@
}

buster_init() {
  buster_invoke "init.ts" "$@"
  buster_symlinkModules "$@"
}

buster_gc() {
  local command="${1:-}"

  case $command in
    "out") rm -rf ${BUSTER_OUT} ;;
    "plat") rm -rf ${BUSTER_RT} ;;
    *)
      rm -rf ${BUSTER_DEPS}
      rm -rf ${BUSTER_RT}
      ;;
  esac
}

buster_lint() {
  ${BUSTER_OXLINT_EXE} $@
}

buster_run() {
  local importFlag="--import $(buster_compileSelf "node-register.ts")"
  local hooksPath="$(buster_compileSelf "node-hooks.ts")"
  
  BUSTER_NODE_HOOKS_PATH=${hooksPath} \
  BUSTER_NODE_MODULES_PATH=${BUSTER_NODE_MODULES_PATH} \
    ${BUSTER_NODE_EXE} ${importFlag} $@
}

buster_test() {
  buster_run "--test **/*.test.ts **/*.spec.ts $@"
}

if [ ! $BUSTER_COMMAND = "gc" ]; then
  buster_ensureNode
  buster_ensureNodeModules
fi

case $BUSTER_COMMAND in
  "bundle") buster_bundle "${@:2}" ;;
  "check") buster_check "${@:2}" ;;
  "init") buster_init "${@:2}" ;;
  "gc") buster_gc "${@:2}" ;;
  "lint") buster_lint "${@:2}" ;;
  "run") buster_run "${@:2}" ;;
  "symlinkModules") buster_symlinkModules "${@:2}" ;;
  "test") buster_test "${@:2}" ;;
  *)
    if [ ! "$@" = "" ]; then
      buster_run "$@"
    else
      echo "Buster ${BUSTER_VERSION} (pew pew pew)"
    fi
    ;;
esac

